<!doctype lake><title>3.2 加解密算法：AES、RSA、MD5</title><meta name="doc-version" content="1" /><meta name="viewport" content="adapt" /><meta name="typography" content="classic" /><meta name="paragraphSpacing" content="relax" /><meta name="defaultFontsize" content="16" /><p data-lake-id="u0b107321" id="u0b107321" style="text-align: center"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2025%2Fpng%2F32516888%2F1741351526779-831ac0b7-8e69-4ed0-bde0-2d8cff135b7f.png%22%2C%22taskId%22%3A%22ubb9030f4-20c9-4343-937d-39812c2c21f%22%2C%22clientId%22%3A%22u647d7575-e68f-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A581.5%2C%22height%22%3A362%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A974489%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A1353%2C%22originHeight%22%3A843%2C%22ratio%22%3A2%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22ocrLocations%22%3A%5B%7B%22text%22%3A%22%E7%AE%97%E6%B3%95%E7%9A%84%E5%8C%BA%E5%88%AB%22%2C%22x%22%3A456%2C%22y%22%3A302%2C%22width%22%3A446%2C%22height%22%3A88%7D%2C%7B%22text%22%3A%22AES%E5%92%8CRSA%22%2C%22x%22%3A588%2C%22y%22%3A200%2C%22width%22%3A477%2C%22height%22%3A83%7D%2C%7B%22text%22%3A%22MD5.%22%2C%22x%22%3A298%2C%22y%22%3A200%2C%22width%22%3A253%2C%22height%22%3A83%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%234969bf%22%2C%22id%22%3A%22ua9c228db%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card></p><h1 data-lake-id="PhXbD" id="PhXbD"><span data-lake-id="u73621410" id="u73621410">基本概念</span></h1><h3 data-lake-id="ok2ou" id="ok2ou"><span data-lake-id="u0b2d8b35" id="u0b2d8b35">1. </span><strong><span data-lake-id="ud22fa3ec" id="ud22fa3ec">AES（高级加密标准）</span></strong></h3><p data-lake-id="u6286fbef" id="u6286fbef"><span data-lake-id="u9a831d2c" id="u9a831d2c">AES是一种</span><strong><span data-lake-id="u012e6100" id="u012e6100">对称</span></strong><span data-lake-id="u31d54512" id="u31d54512">加密算法，也就是说，加密和解密使用的是同一个密钥。</span></p><h4 data-lake-id="bd7RM" id="bd7RM"><strong><span data-lake-id="u245268a1" id="u245268a1">原理</span></strong></h4><ul list="u6724a8a5"><li fid="u64553b95" data-lake-id="u27db391c" id="u27db391c"><strong><span data-lake-id="u251426f9" id="u251426f9">加密过程</span></strong><span data-lake-id="u923885f4" id="u923885f4">：假设你有一份文件，用一个密钥把它加密成一堆乱码。只有用同样的密钥才能解开这些乱码，恢复成原来的文件。</span></li><li fid="u64553b95" data-lake-id="udc84f41e" id="udc84f41e"><strong><span data-lake-id="uf16acbb9" id="uf16acbb9">特点</span></strong><span data-lake-id="u1232c801" id="u1232c801">：AES加密速度非常快，适合处理</span><strong><span data-lake-id="uee81dfb5" id="uee81dfb5">大量数据</span></strong><span data-lake-id="u3d8fdc0e" id="u3d8fdc0e">，比如：</span><span data-lake-id="u7f5098fe" id="u7f5098fe" style="color: rgb(6, 6, 7)">在传输高清视频或者大型文件时，用 AES 加密可以保证数据安全，并且加密解密速度比较快。因为它对称加密的机制，计算量相对较小，处理效率高。</span></li></ul><h3 data-lake-id="uARez" id="uARez"><span data-lake-id="u390ffd82" id="u390ffd82">2. </span><strong><span data-lake-id="ubb75a79a" id="ubb75a79a">RSA（非对称加密算法）</span></strong></h3><p data-lake-id="u0a7773dc" id="u0a7773dc"><span data-lake-id="uf56d41b0" id="uf56d41b0">RSA是一种</span><strong><span data-lake-id="u33147001" id="u33147001">非对称</span></strong><span data-lake-id="u2e387d5c" id="u2e387d5c">加密算法，它的特点是加密和解密使用不同的密钥，分别是</span><strong><span data-lake-id="ubd3e3f44" id="ubd3e3f44">公钥</span></strong><span data-lake-id="u7e995a24" id="u7e995a24">和</span><strong><span data-lake-id="u72b80ad9" id="u72b80ad9">私钥</span></strong><span data-lake-id="uc9d44622" id="uc9d44622">。</span></p><h4 data-lake-id="yHyVM" id="yHyVM"><strong><span data-lake-id="u2d396f97" id="u2d396f97">特点</span></strong></h4><ul list="udce3ca31"><li fid="u4f867d97" data-lake-id="u4bd2ae25" id="u4bd2ae25"><strong><span data-lake-id="udc9e6a34" id="udc9e6a34">安全性高</span></strong><span data-lake-id="ud38de4d8" id="ud38de4d8">：即使别人拿到公钥，也很难破解私钥，所以</span><strong><span data-lake-id="uc48cfb00" id="uc48cfb00">很安全</span></strong><span data-lake-id="ua1f27826" id="ua1f27826">。</span></li><li fid="u4f867d97" data-lake-id="u4ea63a00" id="u4ea63a00"><strong><span data-lake-id="u037d4ead" id="u037d4ead">速度慢</span></strong><span data-lake-id="u547de84a" id="u547de84a">：因为计算比较复杂，所以</span><strong><span data-lake-id="ua211d7a8" id="ua211d7a8">加解密速度</span></strong><span data-lake-id="u4616920f" id="u4616920f">比AES慢。</span></li></ul><h4 data-lake-id="NvX2f" id="NvX2f"><strong><span data-lake-id="u9572bac3" id="u9572bac3">应用场景</span></strong></h4><ul list="u7adb9728"><li fid="u79f0011f" data-lake-id="udaf76b99" id="udaf76b99"><strong><span data-lake-id="u25c5a01f" id="u25c5a01f">数字签名</span></strong><span data-lake-id="u51ea5d17" id="u51ea5d17">：比如你在电子合同上签名，用私钥加密签名信息，别人可以用公钥验证，确保是你签的。</span></li><li fid="u79f0011f" data-lake-id="u7c5c124b" id="u7c5c124b"><strong><span data-lake-id="u2869940e" id="u2869940e" style="color: rgb(6, 6, 7)">用户登录</span></strong><span data-lake-id="u02d736ca" id="u02d736ca" style="color: rgb(6, 6, 7)">：比如在你登录一个网站时，网站会把自己的公钥给你，你用这个公钥把你的登录信息加密后发给网站。网站再用自己的私钥解密，这样即使有人截获了你传输的数据，没有私钥也无法得到你的登录信息。</span></li></ul><h3 data-lake-id="LOVRM" id="LOVRM"><span data-lake-id="u1864ff2a" id="u1864ff2a">3. </span><strong><span data-lake-id="ufd9ebb49" id="ufd9ebb49">MD5（消息摘要算法）</span></strong></h3><p data-lake-id="u14e62bf0" id="u14e62bf0"><span data-lake-id="u056529c3" id="u056529c3">MD5是一种哈希算法，它的作用不是加密，而是生成一个“</span><strong><span data-lake-id="u6068309c" id="u6068309c">指纹</span></strong><span data-lake-id="u0aa750b5" id="u0aa750b5">”。</span></p><h4 data-lake-id="qyXAK" id="qyXAK"><strong><span data-lake-id="uc4bc08ec" id="uc4bc08ec">原理</span></strong></h4><ul list="u133d047c"><li fid="u2d9fff75" data-lake-id="u1c6ba454" id="u1c6ba454"><strong><span data-lake-id="ua7405c88" id="ua7405c88">生成指纹</span></strong><span data-lake-id="u17818481" id="u17818481">：无论你输入多长的文件，MD5都会生成一个固定长度（如 128位）的“指纹”。如果文件内容改变，指纹也会改变。</span></li><li fid="u2d9fff75" data-lake-id="u8da1dc5c" id="u8da1dc5c"><strong><span data-lake-id="ud8d892c2" id="ud8d892c2">不可逆</span></strong><span data-lake-id="u5f428e5e" id="u5f428e5e">：从指纹无法还原出原始文件，就像从脚印无法还原出脚一样。</span></li></ul><h4 data-lake-id="Y9nzA" id="Y9nzA"><strong><span data-lake-id="u2b14b8b7" id="u2b14b8b7">特点</span></strong></h4><ul list="u94a3fbb4"><li fid="uef25f96e" data-lake-id="u5a291143" id="u5a291143"><strong><span data-lake-id="u55da16a9" id="u55da16a9">速度快</span></strong><span data-lake-id="u5691bd37" id="u5691bd37">：计算MD5很高效。</span></li><li fid="uef25f96e" data-lake-id="u9721c397" id="u9721c397"><strong><span data-lake-id="ud41bd82a" id="ud41bd82a">不安全</span></strong><span data-lake-id="u1b84d1d3" id="u1b84d1d3">：虽然MD5的指纹很难被篡改，但现在已经有一些方法可以伪造MD5，所以它不适合用于重要的安全场景。</span></li></ul><h4 data-lake-id="W7xR6" id="W7xR6"><strong><span data-lake-id="ueb5115cb" id="ueb5115cb">应用场景</span></strong></h4><ul list="uc42ff907"><li fid="u2fd257b1" data-lake-id="udff391c8" id="udff391c8"><strong><span data-lake-id="u2e948edd" id="u2e948edd">校验文件完整性</span></strong><span data-lake-id="ub607b014" id="ub607b014">：比如你从网上下载一个软件，网站会提供一个MD5值。你用MD5算法计算下载的文件，如果和网站提供的值一样，说明文件没有被篡改。再比如我们后面讲的</span><strong><span data-lake-id="ucee0065e" id="ucee0065e">文件秒传</span></strong><span data-lake-id="u09db559f" id="u09db559f">也会用到 MD5 加密。</span></li></ul><h3 data-lake-id="h0jmI" id="h0jmI"><span data-lake-id="u7d66a4b9" id="u7d66a4b9">总结</span></h3><ul list="uf85a66b7"><li fid="u2dfce22b" data-lake-id="u9c946dec" id="u9c946dec"><strong><span data-lake-id="ua802a3e4" id="ua802a3e4">AES</span></strong><span data-lake-id="ubbf35315" id="ubbf35315">：适合加密大量数据，速度快，效率高。</span></li><li fid="u2dfce22b" data-lake-id="u208b16bf" id="u208b16bf"><strong><span data-lake-id="ud4c9c9c1" id="ud4c9c9c1">RSA</span></strong><span data-lake-id="u0aa1b24d" id="u0aa1b24d">：适合加密少量数据（如密钥交换、身份验证），安全性高，但速度较慢。</span></li><li fid="u2dfce22b" data-lake-id="u555c5697" id="u555c5697"><strong><span data-lake-id="uad14c1ed" id="uad14c1ed">MD5</span></strong><span data-lake-id="u2c69fbf0" id="u2c69fbf0">：用于验证数据完整性，生成哈希值，但不适合用于加密或安全要求极高的场景。</span></li></ul><h1 data-lake-id="MO7N9" id="MO7N9"><span data-lake-id="ub9215625" id="ub9215625">如何选择合适的算法？</span></h1><ol list="u637696d7"><li fid="u64eb534f" data-lake-id="ub17e0bf5" id="ub17e0bf5"><strong><span data-lake-id="ub274cab4" id="ub274cab4">如果你需要快速加密大量数据</span></strong><span data-lake-id="u1092526b" id="u1092526b">：比如文件加密或网络通信，用AES。</span></li><li fid="u64eb534f" data-lake-id="udb252aa5" id="udb252aa5"><strong><span data-lake-id="u6953520a" id="u6953520a">如果你需要安全地交换密钥或验证身份</span></strong><span data-lake-id="u5128fa3d" id="u5128fa3d">：比如数字签名或密钥交换，用RSA。</span></li><li fid="u64eb534f" data-lake-id="uaeaef9fb" id="uaeaef9fb"><strong><span data-lake-id="udebeefe9" id="udebeefe9">如果你只是想校验文件是否被篡改</span></strong><span data-lake-id="u9319827f" id="u9319827f">：用MD5，但要注意它不安全，不要用于重要场景。</span></li></ol><h1 data-lake-id="BdcYN" id="BdcYN"><span data-lake-id="u4f622c0f" id="u4f622c0f">Java 代码实例</span></h1><p data-lake-id="u58f3e178" id="u58f3e178"><span data-lake-id="uc3507e8a" id="uc3507e8a">了解应用场景即可。</span></p><h3 data-lake-id="Zga11" id="Zga11"><span data-lake-id="u4dfddc43" id="u4dfddc43">1. AES 加密与解密示例</span></h3><p data-lake-id="uf756b096" id="uf756b096"><span data-lake-id="ue88b58a3" id="ue88b58a3">AES 是对称加密算法，加密和解密使用相同的密钥。</span></p><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22import%20javax.crypto.Cipher%3B%5Cnimport%20javax.crypto.KeyGenerator%3B%5Cnimport%20javax.crypto.SecretKey%3B%5Cnimport%20javax.crypto.spec.SecretKeySpec%3B%5Cn%5Cnpublic%20class%20AESExample%20%7B%5Cn%20%20%20%20public%20static%20void%20main(String%5B%5D%20args)%20throws%20Exception%20%7B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E5%8E%9F%E5%A7%8B%E6%95%B0%E6%8D%AE%5Cn%20%20%20%20%20%20%20%20String%20originalText%20%3D%20%5C%22Hello%2C%20AES!%5C%22%3B%5Cn%20%20%20%20%20%20%20%20System.out.println(%5C%22%E5%8E%9F%E5%A7%8B%E6%95%B0%E6%8D%AE%3A%20%5C%22%20%2B%20originalText)%3B%5Cn%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E7%94%9F%E6%88%90AES%E5%AF%86%E9%92%A5%5Cn%20%20%20%20%20%20%20%20KeyGenerator%20keyGenerator%20%3D%20KeyGenerator.getInstance(%5C%22AES%5C%22)%3B%5Cn%20%20%20%20%20%20%20%20keyGenerator.init(128)%3B%20%2F%2F%20%E5%8F%AF%E4%BB%A5%E9%80%89%E6%8B%A9128%E3%80%81192%E6%88%96256%E4%BD%8D%E5%AF%86%E9%92%A5%5Cn%20%20%20%20%20%20%20%20SecretKey%20secretKey%20%3D%20keyGenerator.generateKey()%3B%5Cn%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E5%B0%86%E5%AF%86%E9%92%A5%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%AD%97%E8%8A%82%E6%95%B0%E7%BB%84%EF%BC%88%E6%96%B9%E4%BE%BF%E5%90%8E%E7%BB%AD%E4%BD%BF%E7%94%A8%EF%BC%89%5Cn%20%20%20%20%20%20%20%20byte%5B%5D%20keyBytes%20%3D%20secretKey.getEncoded()%3B%5Cn%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E5%8A%A0%E5%AF%86%5Cn%20%20%20%20%20%20%20%20Cipher%20cipher%20%3D%20Cipher.getInstance(%5C%22AES%5C%22)%3B%5Cn%20%20%20%20%20%20%20%20cipher.init(Cipher.ENCRYPT_MODE%2C%20new%20SecretKeySpec(keyBytes%2C%20%5C%22AES%5C%22))%3B%5Cn%20%20%20%20%20%20%20%20byte%5B%5D%20encryptedBytes%20%3D%20cipher.doFinal(originalText.getBytes())%3B%5Cn%20%20%20%20%20%20%20%20System.out.println(%5C%22%E5%8A%A0%E5%AF%86%E5%90%8E%E7%9A%84%E6%95%B0%E6%8D%AE%3A%20%5C%22%20%2B%20new%20String(encryptedBytes))%3B%5Cn%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E8%A7%A3%E5%AF%86%5Cn%20%20%20%20%20%20%20%20cipher.init(Cipher.DECRYPT_MODE%2C%20new%20SecretKeySpec(keyBytes%2C%20%5C%22AES%5C%22))%3B%5Cn%20%20%20%20%20%20%20%20byte%5B%5D%20decryptedBytes%20%3D%20cipher.doFinal(encryptedBytes)%3B%5Cn%20%20%20%20%20%20%20%20System.out.println(%5C%22%E8%A7%A3%E5%AF%86%E5%90%8E%E7%9A%84%E6%95%B0%E6%8D%AE%3A%20%5C%22%20%2B%20new%20String(decryptedBytes))%3B%5Cn%20%20%20%20%7D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22MtG2E%22%7D"></card><h3 data-lake-id="J0ZC0" id="J0ZC0"><span data-lake-id="u03b20a5c" id="u03b20a5c">2. RSA 加密与解密示例</span></h3><p data-lake-id="ufb366045" id="ufb366045"><span data-lake-id="u3f1abc8d" id="u3f1abc8d">RSA 是非对称加密算法，加密使用公钥，解密使用私钥。</span></p><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22import%20java.security.KeyPair%3B%5Cnimport%20java.security.KeyPairGenerator%3B%5Cnimport%20java.security.PrivateKey%3B%5Cnimport%20java.security.PublicKey%3B%5Cnimport%20javax.crypto.Cipher%3B%5Cn%5Cnpublic%20class%20RSAExample%20%7B%5Cn%20%20%20%20public%20static%20void%20main(String%5B%5D%20args)%20throws%20Exception%20%7B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E5%8E%9F%E5%A7%8B%E6%95%B0%E6%8D%AE%5Cn%20%20%20%20%20%20%20%20String%20originalText%20%3D%20%5C%22Hello%2C%20RSA!%5C%22%3B%5Cn%20%20%20%20%20%20%20%20System.out.println(%5C%22%E5%8E%9F%E5%A7%8B%E6%95%B0%E6%8D%AE%3A%20%5C%22%20%2B%20originalText)%3B%5Cn%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E7%94%9F%E6%88%90RSA%E5%AF%86%E9%92%A5%E5%AF%B9%EF%BC%88%E5%85%AC%E9%92%A5%E5%92%8C%E7%A7%81%E9%92%A5%EF%BC%89%5Cn%20%20%20%20%20%20%20%20KeyPairGenerator%20keyPairGenerator%20%3D%20KeyPairGenerator.getInstance(%5C%22RSA%5C%22)%3B%5Cn%20%20%20%20%20%20%20%20keyPairGenerator.initialize(2048)%3B%20%2F%2F%20%E5%AF%86%E9%92%A5%E9%95%BF%E5%BA%A6%EF%BC%8C%E9%80%9A%E5%B8%B8%E4%B8%BA2048%E4%BD%8D%5Cn%20%20%20%20%20%20%20%20KeyPair%20keyPair%20%3D%20keyPairGenerator.generateKeyPair()%3B%5Cn%20%20%20%20%20%20%20%20PublicKey%20publicKey%20%3D%20keyPair.getPublic()%3B%5Cn%20%20%20%20%20%20%20%20PrivateKey%20privateKey%20%3D%20keyPair.getPrivate()%3B%5Cn%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E4%BD%BF%E7%94%A8%E5%85%AC%E9%92%A5%E5%8A%A0%E5%AF%86%5Cn%20%20%20%20%20%20%20%20Cipher%20cipher%20%3D%20Cipher.getInstance(%5C%22RSA%5C%22)%3B%5Cn%20%20%20%20%20%20%20%20cipher.init(Cipher.ENCRYPT_MODE%2C%20publicKey)%3B%5Cn%20%20%20%20%20%20%20%20byte%5B%5D%20encryptedBytes%20%3D%20cipher.doFinal(originalText.getBytes())%3B%5Cn%20%20%20%20%20%20%20%20System.out.println(%5C%22%E5%8A%A0%E5%AF%86%E5%90%8E%E7%9A%84%E6%95%B0%E6%8D%AE%3A%20%5C%22%20%2B%20new%20String(encryptedBytes))%3B%5Cn%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E4%BD%BF%E7%94%A8%E7%A7%81%E9%92%A5%E8%A7%A3%E5%AF%86%5Cn%20%20%20%20%20%20%20%20cipher.init(Cipher.DECRYPT_MODE%2C%20privateKey)%3B%5Cn%20%20%20%20%20%20%20%20byte%5B%5D%20decryptedBytes%20%3D%20cipher.doFinal(encryptedBytes)%3B%5Cn%20%20%20%20%20%20%20%20System.out.println(%5C%22%E8%A7%A3%E5%AF%86%E5%90%8E%E7%9A%84%E6%95%B0%E6%8D%AE%3A%20%5C%22%20%2B%20new%20String(decryptedBytes))%3B%5Cn%20%20%20%20%7D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22siZpX%22%7D"></card><h3 data-lake-id="pZPoV" id="pZPoV"><span data-lake-id="u042ddf02" id="u042ddf02">3. MD5 哈希计算示例</span></h3><p data-lake-id="uc3c92729" id="uc3c92729"><span data-lake-id="u9bd5f39d" id="u9bd5f39d">MD5 用于生成数据的摘要（哈希值），用于验证数据完整性。</span></p><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22java%22%2C%22code%22%3A%22import%20java.security.MessageDigest%3B%5Cn%5Cnpublic%20class%20MD5Example%20%7B%5Cn%20%20%20%20public%20static%20void%20main(String%5B%5D%20args)%20throws%20Exception%20%7B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E5%8E%9F%E5%A7%8B%E6%95%B0%E6%8D%AE%5Cn%20%20%20%20%20%20%20%20String%20originalText%20%3D%20%5C%22Hello%2C%20MD5!%5C%22%3B%5Cn%20%20%20%20%20%20%20%20System.out.println(%5C%22%E5%8E%9F%E5%A7%8B%E6%95%B0%E6%8D%AE%3A%20%5C%22%20%2B%20originalText)%3B%5Cn%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E5%88%9B%E5%BB%BAMD5%E5%93%88%E5%B8%8C%E5%AF%B9%E8%B1%A1%5Cn%20%20%20%20%20%20%20%20MessageDigest%20md%20%3D%20MessageDigest.getInstance(%5C%22MD5%5C%22)%3B%5Cn%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E8%AE%A1%E7%AE%97%E5%93%88%E5%B8%8C%E5%80%BC%5Cn%20%20%20%20%20%20%20%20byte%5B%5D%20hashBytes%20%3D%20md.digest(originalText.getBytes())%3B%5Cn%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E5%B0%86%E5%93%88%E5%B8%8C%E5%80%BC%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%88%E6%96%B9%E4%BE%BF%E6%9F%A5%E7%9C%8B%EF%BC%89%5Cn%20%20%20%20%20%20%20%20StringBuilder%20hexString%20%3D%20new%20StringBuilder()%3B%5Cn%20%20%20%20%20%20%20%20for%20(byte%20b%20%3A%20hashBytes)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20String%20hex%20%3D%20Integer.toHexString(0xff%20%26%20b)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20if%20(hex.length()%20%3D%3D%201)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20hexString.append('0')%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%20%20%20%20hexString.append(hex)%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%20%20%20%20System.out.println(%5C%22MD5%E5%93%88%E5%B8%8C%E5%80%BC%3A%20%5C%22%20%2B%20hexString.toString())%3B%5Cn%20%20%20%20%7D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22TUD05%22%7D"></card><p data-lake-id="u54acfeee" id="u54acfeee"><br></p>